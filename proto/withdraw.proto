syntax = "proto3";

package withdraw;

import "api.proto";

message FindAllWithdrawRequest {
  int32 page = 1;
  int32 page_size = 2;
  string search = 3;
}

message FindWithdrawByIdRequest { int32 id = 1; }

message FindWithdrawByUserIdRequest { int32 user_id = 1; }

message CreateWithdrawRequest {
  int32 user_id = 1;
  int32 withdraw_amount = 2;
  string withdraw_time = 3;
}

message UpdateWithdrawRequest {
  int32 withdraw_id = 1;
  int32 user_id = 2;
  int32 withdraw_amount = 3;
  string withdraw_time = 4;
}

message WithdrawResponse {
  int32 withdraw_id = 1;
  int32 user_id = 2;
  int32 withdraw_amount = 3;
  string withdraw_time = 4;
  string created_at = 5;
  string updated_at = 6;
}

message ApiResponseWithdrawResponse {
  string status = 1;
  string message = 2;
  WithdrawResponse data = 3;
}


message ApiResponsesWithdrawResponse {
  string status = 1;
  string message = 2;
  repeated WithdrawResponse data = 3;
}

message ApiResponsesWithdrawPaginated {
  string status = 1;
  string message = 2;
  repeated WithdrawResponse data = 3;
  api.Pagination pagination = 4;
}



service WithdrawService {
  rpc FindAllWithdraw(FindAllWithdrawRequest) returns (ApiResponsesWithdrawPaginated) {}
  rpc FindWithdrawById(FindWithdrawByIdRequest) returns (ApiResponseWithdrawResponse) {}
  rpc FindWithdrawByUserId(FindWithdrawByUserIdRequest)
      returns (ApiResponseWithdrawResponse) {}
  rpc FindWithdrawByUsersId(FindWithdrawByUserIdRequest)
      returns (ApiResponsesWithdrawResponse) {}
  rpc CreateWithdraw(CreateWithdrawRequest) returns (ApiResponseWithdrawResponse) {}
  rpc UpdateWithdraw(UpdateWithdrawRequest) returns (ApiResponseWithdrawResponse) {}
  rpc DeleteWithdraw(FindWithdrawByIdRequest) returns (api.ApiResponseEmpty) {}
}
